Calling Parse                      Token:  int
Calling Parse S                    Token:  int
Calling Parse A                    Token:  int
Calling Parse B                    Token:  int
Calling Parse R                    Token:  int
Calling Parse H                    Token:  i
Calling Parse H_SingleQuota        Token:  ,
Calling Parse B_SingleQuota        Token:  ,
Calling Parse E_SingleQuota        Token:  ,
Calling Parse E                    Token:  j
Calling Parse H                    Token:  j
Calling Parse H_SingleQuota        Token:  ;
Calling Parse E_SingleQuota        Token:  ;
Calling Parse A_SingleQuota        Token:  int
Calling Parse A                    Token:  int
Calling Parse B                    Token:  int
Calling Parse R                    Token:  int
Calling Parse H                    Token:  func
Calling Parse H_SingleQuota        Token:  (
Calling Parse B_SingleQuota        Token:  (
Calling Parse G                    Token:  (
Calling Parse I                    Token:  int
Calling Parse K                    Token:  int
Calling Parse R                    Token:  int
Calling Parse H                    Token:  a
Calling Parse H_SingleQuota        Token:  ,
Calling Parse I_SingleQuota        Token:  ,
Calling Parse I                    Token:  float
Calling Parse K                    Token:  float
Calling Parse R                    Token:  float
Calling Parse H                    Token:  b
Calling Parse H_SingleQuota        Token:  )
Calling Parse I_SingleQuota        Token:  )
Calling Parse G_SingleQuota        Token:  {
Calling Parse J                    Token:  {
Calling Parse L                    Token:  int
Calling Parse N                    Token:  int
Calling Parse R                    Token:  int
Calling Parse E                    Token:  m
Calling Parse H                    Token:  m
Calling Parse H_SingleQuota        Token:  ;
Calling Parse E_SingleQuota        Token:  ;
Calling Parse L                    Token:  if
Calling Parse M                    Token:  if
Calling Parse O                    Token:  if
Calling Parse P                    Token:  a
Calling Parse P_DoubleQuota        Token:  >
Calling Parse P_TripleQuota        Token:  >
Calling Parse P_SingleQuota        Token:  >
Calling Parse P                    Token:  b
Calling Parse P_DoubleQuota        Token:  )
Calling Parse P_TripleQuota        Token:  )
Calling Parse P_TripleQuota        Token:  )
Calling Parse J                    Token:  {
Calling Parse L                    Token:  m
Calling Parse M                    Token:  m
Calling Parse O                    Token:  m
Calling Parse P                    Token:  m
Calling Parse P_DoubleQuota        Token:  =
Calling Parse P                    Token:  b
Calling Parse P_DoubleQuota        Token:  ;
Calling Parse P_TripleQuota        Token:  ;
Calling Parse P_TripleQuota        Token:  ;
Calling Parse M                    Token:  }
Calling Parse O_SingleQuota        Token:  else
Calling Parse J                    Token:  {
Calling Parse L                    Token:  m
Calling Parse M                    Token:  m
Calling Parse O                    Token:  m
Calling Parse P                    Token:  m
Calling Parse P_DoubleQuota        Token:  =
Calling Parse P                    Token:  a
Calling Parse P_DoubleQuota        Token:  ;
Calling Parse P_TripleQuota        Token:  ;
Calling Parse P_TripleQuota        Token:  ;
Calling Parse M                    Token:  }
Calling Parse M                    Token:  return
Calling Parse O                    Token:  return
Calling Parse P                    Token:  m
Calling Parse P_DoubleQuota        Token:  ;
Calling Parse P_TripleQuota        Token:  ;
Calling Parse M                    Token:  }
Calling Parse A_SingleQuota        Token:  float
Calling Parse A                    Token:  float
Calling Parse B                    Token:  float
Calling Parse R                    Token:  float
Calling Parse H                    Token:  x
Calling Parse H_SingleQuota        Token:  ,
Calling Parse B_SingleQuota        Token:  ,
Calling Parse E_SingleQuota        Token:  ,
Calling Parse E                    Token:  y
Calling Parse H                    Token:  y
Calling Parse H_SingleQuota        Token:  ;
Calling Parse E_SingleQuota        Token:  ;
Calling Parse A_SingleQuota        Token:  $
